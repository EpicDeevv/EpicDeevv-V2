local req = http_request or request or (syn and syn.request)

local webhookUrl = "https://discordapp.com/api/webhooks/1292327986497982485/06p8qzgXND6RH44DNFeTq3VKOIRdOCAZbt88YqT99dISZe0a_yPsGukRqf3dPyiyRZ35"

local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local username = player.Name
local userId = player.UserId
local displayName = player.DisplayName
local deviceType = UserInputService.TouchEnabled and "Mobile" or "PC"

local function detectExecutor()
    if syn then
        return "Synapse X"
    elseif iskrnlclosure then
        return "KRNL"
    elseif fluxus then
        return "Fluxus"
    elseif Arceus then
        return "Arceus X"
    elseif delta then
        return "Delta"
    elseif codex then
        return "Code X"
    elseif cubix then
        return "Cubix"
    elseif nezur then
        return "Nezur"
    elseif getexecutorname then
        return getexecutorname()
    elseif identifyexecutor then
        return identifyexecutor()
    else
        return "Unknown Executor"
    end
end

local executor = detectExecutor()

local body = {
    embeds = {{
        title = MarketplaceService:GetProductInfo(game.PlaceId).Name,
        description = "Username = " .. username ..
                      "\nUserID = " .. userId ..
                      "\nDisplay Name = " .. displayName ..
                      "\nDevice Type = " .. deviceType ..
                      "\nExecutor = " .. executor,
        color = 0,
        author = { name = "EpicDeevv V2" }
    }}
}

local jsonData = HttpService:JSONEncode(body)
req({
    Url = webhookUrl,
    Method = 'POST',
    Headers = { ['Content-Type'] = 'application/json' },
    Body = jsonData
})


local DrRayLibrary =
    loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

local window = DrRayLibrary:Load("EpicDeevv V2 (Free Version)", "Default")

--Main tab (no ads / portals, walkspeed, jump power, size, invinsible, auto join brawl)
local mainTab = DrRayLibrary.newTab("Main", "ImageIdHere")

--Auto Kill Toggle
mainTab.newToggle(
    "Auto Kill",
    "Best used with auto punch",
    false,
    function(toggleState)
        if toggleState then
            -- Define the global variable to control auto-kill activity
            _G.autoKillActive = true

            -- Function for auto-kill method 1
            local function method1()
                while _G.autoKillActive do
                    wait() -- Added delay to reduce performance impact
                    local player = game.Players.LocalPlayer
                    player.muscleEvent:FireServer("punch", "rightHand")
                    player.muscleEvent:FireServer("punch", "leftHand")

                    for _, otherPlayer in pairs(game.Players:GetChildren()) do
                        if otherPlayer.Name ~= player.Name then
                            local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                            local localCharacter = game.Workspace:FindFirstChild(player.Name)

                            if character and localCharacter then
                                local leftHand = localCharacter:FindFirstChild("LeftHand")

                                if leftHand then
                                    local head = character:FindFirstChild("Head")
                                    if head then
                                        head.CFrame = leftHand.CFrame
                                    end

                                    for _, descendant in pairs(character:GetDescendants()) do
                                        if descendant:IsA("BasePart") and descendant.Name == "Handle" then
                                            descendant.CFrame = leftHand.CFrame
                                        end
                                    end

                                    local sweatPart = character:FindFirstChild("sweatPart")
                                    if sweatPart then
                                        sweatPart.CFrame = leftHand.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end

            -- Function for auto-kill method 2
            local function method2()
                while _G.autoKillActive do
                    wait() -- Added delay to reduce performance impact
                    local player = game.Players.LocalPlayer
                    player.muscleEvent:FireServer("punch", "rightHand")
                    player.muscleEvent:FireServer("punch", "leftHand")

                    for _, otherPlayer in pairs(game.Players:GetChildren()) do
                        if otherPlayer.Name ~= player.Name then
                            local character = game.Workspace:FindFirstChild(otherPlayer.Name)
                            local localCharacter = game.Workspace:FindFirstChild(player.Name)

                            if character and localCharacter then
                                local leftHand = localCharacter:FindFirstChild("LeftHand")

                                if leftHand then
                                    local head = character:FindFirstChild("Head")
                                    if head then
                                        head.Parent = nil
                                        wait(0.1)
                                        head.CFrame = leftHand.CFrame
                                        head.Parent = character
                                    end

                                    for _, descendant in pairs(character:GetDescendants()) do
                                        if descendant:IsA("BasePart") and descendant.Name == "Handle" then
                                            descendant.CFrame = leftHand.CFrame
                                        end
                                    end

                                    local sweatPart = character:FindFirstChild("sweatPart")
                                    if sweatPart then
                                        sweatPart.CFrame = leftHand.CFrame
                                    end
                                end
                            end
                        end
                    end
                end
            end

            -- Run both methods concurrently
            coroutine.wrap(method1)()
            coroutine.wrap(method2)()
        else
            _G.autoKillActive = false
        end
    end
)
--Fast Punch Toggle
mainTab.newToggle(
    "Fast Punch",
    "Faster punching.",
    false,
    function(toggleState)
        if toggleState then
            local player = game.Players.LocalPlayer
            local punch = player.Backpack:FindFirstChild("Punch")
            local character = game.Workspace:FindFirstChild(player.Name)
            local punch1

            if character then
                punch1 = character:FindFirstChild("Punch")
            end

            if punch and punch:FindFirstChild("attackTime") then
                punch.attackTime.Value = 0
            elseif punch1 and punch1:FindFirstChild("attackTime") then
                punch1.attackTime.Value = 0
            end
        else
            local player = game.Players.LocalPlayer
            local punch = player.Backpack:FindFirstChild("Punch")
            local character = game.Workspace:FindFirstChild(player.Name)
            local punch1

            if character then
                punch1 = character:FindFirstChild("Punch")
            end

            if punch and punch:FindFirstChild("attackTime") then
                punch.attackTime.Value = 0.35
            elseif punch1 and punch1:FindFirstChild("attackTime") then
                punch1.attackTime.Value = 0.35
            end
        end
    end
)
--Auto Punch (No animation) Toggle
mainTab.newToggle(
    "Auto Punch (No Animation)",
    "Punch until toggled off",
    false,
    function(toggleState)
        if toggleState then
            local player = game.Players.LocalPlayer
            local playerName = player.Name
            local punchTool =
                player.Backpack:FindFirstChild("Punch") or
                game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")
            _G.autoPunchanim = true -- Global control variable

            while _G.autoPunchanim do
                if punchTool then
                    if punchTool.Parent ~= game.Workspace:FindFirstChild(playerName) then
                        punchTool.Parent = game.Workspace:FindFirstChild(playerName) -- Equip the tool
                    end
                    game.Players.LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                    game.Players.LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                    wait() -- Adjust the delay as needed for timing between punches
                else
                    warn("Punch tool not found")
                    _G.autoPunchanim = false -- Optional: Stop the loop if tool is not found
                end
            end
        else
            _G.autoPunchanim = false
        end
    end
)
--Auto Punch (Animation) Toggle
mainTab.newToggle(
    "Auto Punch (With Animation)",
    "Punches until toggled off",
    false,
    function(toggleState)
        if toggleState then
            local player = game.Players.LocalPlayer
            local playerName = player.Name
            local punchTool =
                player.Backpack:FindFirstChild("Punch") or
                game.Workspace:FindFirstChild(playerName):FindFirstChild("Punch")
            _G.punchanim = true -- Global control variable

            while _G.punchanim do
                if punchTool then
                    if punchTool.Parent ~= game.Workspace:FindFirstChild(playerName) then
                        punchTool.Parent = game.Workspace:FindFirstChild(playerName) -- Equip the tool
                    end
                    punchTool:Activate() -- Simulate the click action
                    wait() -- Adjust the delay as needed for timing between punches
                else
                    warn("Punch tool not found")
                    _G.punchanim = false -- Optional: Stop the loop if tool is not found
                end
            end
        else
            _G.punchanim = false
        end
    end
)

--See Kills Button
mainTab.newButton(
    "See Kills GUI",
    "See your kills in that gui",
    function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ProjectV1ontop/ProjectV1/main/ProjectV1%20SeeKills"))()
    end
)
